<?xml version="1.0" encoding="UTF-8"?>

<EventFramework xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="eventframework.xsd"
	xmlns:dis="http://attunedlabs.com/internalevents/Dispatcher">


	<!-- <EventSubscriptions>Optional
		<EventSubscription eventId="PRINT_SERVICE" enabled='true'>
			<Subscriber id="xyz" type="route" enabled='true'>xyzRoute
			</Subscriber>
			<Subscriber id="xyz1" type="component" enabled='true'>com.abc.MYComponent
			</Subscriber>

		</EventSubscription>

	</EventSubscriptions> -->

		<EventSubscription>

			<SubscribeEvent subscriptionId="TestSubscriber"
				isEnabled="true" retryCount="6" retry="false">
				<SubscribeTo>testTopic1</SubscribeTo>
				<EventSubscriptionCriteria>eventId == "LabelPrintJob_EVT"
				</EventSubscriptionCriteria>
				<EventRoutingRules>
					<EventRoutingRule>
						<Rule>eventParam.printerId == "ZPL01234"</Rule>
						<HttpPostRequest featurGroup="sample" featureName="printservice"
							serviceType="printlabel" hostName="localhost" port="9080">
							<header-params>
								<header-param>
									<param-name>CODE</param-name>
									<param-value>X'02'</param-value>
								</header-param>
								<header-param>
									<param-name>Zipper</param-name>
									<param-value>B'0'</param-value>
								</header-param>
							</header-params>
						</HttpPostRequest>
					</EventRoutingRule>
				</EventRoutingRules>
			</SubscribeEvent>

		</EventSubscription>


		<DispatchChanels>

			<DispatchChanel id="FILE_STORE" description="file store"
				isEnabled="true">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.FileStoreDispatchChanel"
					beanRefid="fileStoreDispatcher" />
				<ChanelConfiguration>
					{"filepath":"/home/ubuntu/LogDispatcher","filename":"LogDispatchChanel.txt"}
				</ChanelConfiguration>
			</DispatchChanel>

			<DispatchChanel id="EVT_FILE_STORE" description="event file store"
				isEnabled="true">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.FileStoreDispatchChanel"
					beanRefid="fileEventStoreDispatcher" />
				<ChanelConfiguration>
					{"filepath":"/home/ubuntu/LogDispatcher","filename":"EventDispatchChanel.txt"}
				</ChanelConfiguration>
			</DispatchChanel>

			<DispatchChanel id="REST_CLIENT" description="rest client"
				isEnabled="false">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.RestClientPostDispatchChanel"
					beanRefid="restClientDispatcher" />
				<ChanelConfiguration> {"restpath":"http://localhost:9080/baseroute"}
				</ChanelConfiguration>
			</DispatchChanel>

			<DispatchChanel id="PRINT_REST_CLIENT" description="print rest client"
				isEnabled="false">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.RestClientPostDispatchChanel"
					beanRefid="restClientDispatcher" />
				<ChanelConfiguration>{"restpath":"http://192.168.1.120:9090/printservice"}
				</ChanelConfiguration>
			</DispatchChanel>
			<DispatchChanel id="TEST_CHANEL" description="Chanel that writes to Hazelcast"
				isEnabled="true">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.HazelcastQueueDispatchChanel"
					beanRefid="testHCQueue" />
				<ChanelConfiguration>{"queueName":"TestChanel"}
				</ChanelConfiguration>
			</DispatchChanel>
			<DispatchChanel id="TEST_CHANELTWO" description="Chanel that writes to Hazelcast"
				isEnabled="false">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.HazelcastQueueDispatchChanel"
					beanRefid="testHCQueue" />
				<ChanelConfiguration>{"queueNameOne":"TEST_CHANELTWO"}
				</ChanelConfiguration>
			</DispatchChanel>
			<DispatchChanel id="KAFKA_TOPIC_CHANNEL" description="Chanel that writes to Hazelcast"
				isEnabled="true">
				<ChanelImplementation
					fqcn="com.attunedlabs.eventframework.dispatcher.chanel.KafkaTopicDispatchChannel"
					beanRefid="testTopic" />
				<ChanelConfiguration>{"bootstrapservers":"localhost:9092","topic":"testTopic1",
				"isTenantAware":false}
				</ChanelConfiguration>
			</DispatchChanel>
		</DispatchChanels>

		<SystemEvents>
			<SystemEvent id="SERVICE_COMPLETION_FAILURE"
				description="Standard Event for failure of every service Type"
				isEnabled="true">
				<CamelSystemEventBuilder
					fqcn="com.attunedlabs.eventframework.camel.eventproducer.ServiceCompletionFailureEventBuilder"
					beanRefid="ServiceEventBuilder" />
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.CustomLeapEventTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</SystemEvent>

			<SystemEvent id="SERVICE_COMPLETION_SUCCESS"
				description="Standard Event for sucess of every service Type"
				isEnabled="false">
				<CamelSystemEventBuilder
					fqcn="com.attunedlabs.eventframework.camel.eventproducer.ServiceCompletionSuccessEventBuilder"
					beanRefid="ServiceEventBuilder" />
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.CustomLeapEventTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</SystemEvent>
		</SystemEvents>

		<Events>

			<Event id="POLINEITEM_UNLOADED" type="internal" description="polineitem unloaded"
				isEnabled="true">
				<EventParams>
					<EventParam name="productid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
					<EventParam name="servicetype" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="baseContext"
						feature="polineitem" component="com.attunedlabs.datasource.service.InsertService"
						raiseOn="success" />

					<CamelEventBuilder type="OGNL">
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>

						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="XML-XSLT">
							<dis:XSLTName>eventxmlTransformation.xsl</dis:XSLTName>
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>

			<Event id="INVENTORY_UPDATED" type="internal" description="inventory updated"
				isEnabled="false">
				<EventParams>
					<EventParam name="policyid" dataType="string"
						validationRegEx="" />
					<EventParam name="data" dataType="string"
						validationRegEx="" />
					<EventParam name="servicetype" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="baseContext"
						feature="polineitem" component="com.attunedlabs.datasource.dao.UpdateInventory"
						raiseOn="success" />
					<CamelEventBuilder type="CUSTOM">
						<EventBuilder
							fqcn="com.attunedlabs.eventframework.camel.eventbuilder.InventoryUpdateEventBuilder"
							beanRefid="inventoryUpdateBuilder" />
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.CustomLeapEventTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>

			<Event id="POLINEITEM_PROCESSED" type="internal" description="polineitem processed"
				isEnabled="false">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
					<EventParam name="servicetype" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="baseContext"
						feature="polineitem" component="" raiseOn="success" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="JSON" />
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>

			<Event id="POLINEITEM_PROC_FAILED" type="internal"
				description="polineitem process failed" isEnabled="false">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
					<EventParam name="servicetype" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="baseContext"
						feature="polineitem" component="" raiseOn="failure" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>
			<Event id="DISABLED_PRINT_SERVICE" type="internal" description="print service"
				isEnabled="false">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="baseContext"
						feature="labelservice" component="com.attunedlabs.wms20.services.printlabel.PrintLabel"
						raiseOn="success" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>EVT_FILE_STORE</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>
			<!-- Camel Producer Config for Service Producer -->
			<Event id="PRINT_SERVICE" type="internal" description="print service"
				isEnabled="true">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="AddLabel"
						feature="labelservice" raiseOn="success" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>TEST_CHANEL</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>
			<Event id="PRINT_SERVICE-CEPSUCESS" type="internal"
				description="print service" isEnabled="true">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="AddLabel"
						feature="labelservice" raiseOn="success" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>TEST_CHANEL</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>
			<!-- Camel Producer Config for Service Producer -->
			<Event id="PRINT_SERVICE-all" type="internal" description="print service"
				isEnabled="true">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="AddLabel"
						feature="labelservice" raiseOn="all" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>TEST_CHANEL</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>
			<!-- Camel Producer Config for Bean Producer -->
			<Event id="PRINT_SERVICE_BEANPRODUCER" type="internal"
				description="print service" isEnabled="true">
				<EventParams>
					<EventParam name="eventid" dataType="string"
						validationRegEx="" />
					<EventParam name="tenantid" dataType="string"
						validationRegEx="" />
				</EventParams>
				<CamelEventProducer>
					<CamelProducerConfig serviceName="AddLabel"
						feature="labelservice" component="com.attunedlabs.wms20.services.printlabel.PrintLabel" />
					<CamelEventBuilder type='OGNL'>
						<OGNLMapping>
							<Source from="CamelExchange">
								<EventMapping destination="eventParam['servicetype']"
									source="In.headers['servicetype']" />
								<EventMapping destination="eventParam['tenant']"
									source="In.headers['tenantid']" />
							</Source>
						</OGNLMapping>
					</CamelEventBuilder>
				</CamelEventProducer>
				<dis:EventDispatchers>
					<dis:EventDispatcher>
						<dis:DispatchChanelId>TEST_CHANEL</dis:DispatchChanelId>
						<dis:EventTransformation Type="CUSTOM">
							<dis:CustomTransformer
								fqcn="com.attunedlabs.eventframework.dispatcher.transformer.GenericLeapEventJsonTransformer" />
						</dis:EventTransformation>
					</dis:EventDispatcher>
				</dis:EventDispatchers>
			</Event>


		</Events>
</EventFramework>

